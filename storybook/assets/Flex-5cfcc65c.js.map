{"version":3,"file":"Flex-5cfcc65c.js","sources":["../../src/components/common/Flex/Flex.styled.ts","../../src/components/common/Flex/Flex.tsx"],"sourcesContent":["import { CSSProperties } from 'react';\nimport styled, { css } from 'styled-components';\n\nexport interface FlexStyledProps {\n\t$alignItems?: CSSProperties['alignItems'];\n\t$direction?: CSSProperties['flexDirection'];\n\t$flexGrow?: CSSProperties['flexGrow'];\n\t$flexWrap?: CSSProperties['flexWrap'];\n\t$fullWidth?: boolean;\n\t$gap?: CSSProperties['gap'];\n\t$height?: CSSProperties['height'];\n\t$justifyContent?: CSSProperties['justifyContent'];\n\t$width?: CSSProperties['width'];\n}\n\nexport const FlexStyled = styled.div<FlexStyledProps>`\n\tdisplay: flex;\n\n\t${props => css`\n\t\talign-items: ${props.$alignItems};\n\t\tflex-direction: ${props.$direction};\n\t\tflex-grow: ${props.$flexGrow};\n\t\tflex-wrap: ${props.$flexWrap};\n\t\twidth: ${props.$fullWidth ? '100%' : typeof props.$width === 'number' ? `${props.$width}px` : props.$width};\n\t\tgap: ${typeof props.$gap === 'number' ? `${props.$gap}px` : props.$gap};\n\t\theight: ${typeof props.$height === 'number' ? `${props.$height}px` : props.$height};\n\t\tjustify-content: ${props.$justifyContent};\n\t`}\n`;\n","import { ForwardedRef, HTMLAttributes, forwardRef } from 'react';\n\nimport type { CommonPropsWithChildren } from '../../../@types';\nimport * as S from './Flex.styled';\n\ninterface FlexProps extends S.FlexStyledProps, CommonPropsWithChildren, HTMLAttributes<HTMLElement> {\n\ttag?: keyof JSX.IntrinsicElements;\n}\n\nconst Flex = forwardRef<HTMLElement, FlexProps>((props, ref) => {\n\tconst {\n\t\t$alignItems = 'flex-start',\n\t\t$direction = 'row',\n\t\t$flexGrow = '0',\n\t\t$flexWrap = 'nowrap',\n\t\t$fullWidth,\n\t\t$gap,\n\t\t$height = 'auto',\n\t\t$justifyContent = 'flex-start',\n\t\t$width = 'auto',\n\t\tchildren,\n\t\tclassName,\n\t\tstyle,\n\t\ttag = 'div',\n\t\t...rest\n\t} = props;\n\n\tconst styledProps: S.FlexStyledProps = {\n\t\t$alignItems,\n\t\t$direction,\n\t\t$flexGrow,\n\t\t$flexWrap,\n\t\t$fullWidth,\n\t\t$gap,\n\t\t$height,\n\t\t$justifyContent,\n\t\t$width\n\t};\n\n\treturn (\n\t\t<S.FlexStyled\n\t\t\tref={ref as ForwardedRef<HTMLDivElement>}\n\t\t\tas={tag}\n\t\t\tclassName={className}\n\t\t\tstyle={style}\n\t\t\t{...styledProps}\n\t\t\t{...rest}\n\t\t>\n\t\t\t{children}\n\t\t</S.FlexStyled>\n\t);\n});\n\nFlex.displayName = 'Flex';\n\nexport default Flex;\n"],"names":["FlexStyled","styled","div","withConfig","displayName","componentId","props","css","$alignItems","$direction","$flexGrow","$flexWrap","$fullWidth","$width","$gap","$height","$justifyContent","Flex","forwardRef","ref","children","className","style","rest","styledProps","jsx","S.FlexStyled","tag"],"mappings":"6JAeaA,MAAAA,EAAaC,EAAOC,IAAGC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,cAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,EAGjCC,GAASC,EACKD,CAAAA,eAAAA,mBAAAA,cAAAA,cAAAA,UAAAA,QAAAA,WAAAA,oBAAAA,GAAAA,EAAAA,EAAME,YACHF,EAAMG,WACXH,EAAMI,UACNJ,EAAMK,UACVL,EAAMM,WAAa,OAAS,OAAON,EAAMO,QAAW,SAAY,GAAEP,EAAMO,MAAO,KAAMP,EAAMO,OAC7F,OAAOP,EAAMQ,MAAS,SAAY,GAAER,EAAMQ,IAAK,KAAMR,EAAMQ,KACxD,OAAOR,EAAMS,SAAY,SAAY,GAAET,EAAMS,OAAQ,KAAMT,EAAMS,QACxDT,EAAMU,eAAe,CACxC,EClBFC,EAAAC,EAAA,WAAA,CAAAZ,EAAAa,IAAA,CACC,KAAA,CAAM,YAAAX,EAAA,aACS,WAAAC,EAAA,MACD,UAAAC,EAAA,IACD,UAAAC,EAAA,SACA,WAAAC,EACZA,KAAAA,EACAE,QAAAA,EAAAA,OACU,gBAAAE,EAAA,aACQ,OAAAH,EAAA,OACT,SAAAO,EACTA,UAAAA,EACAC,MAAAA,EACAC,IAAAA,EAAAA,MACM,GAAAC,CACHA,EAAAA,EAGJC,EAAA,CAAuC,YAAAhB,EACtCA,WAAAA,EACAC,UAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,KAAAA,EACAE,QAAAA,EACAC,gBAAAA,EACAC,OAAAA,CACAH,EAGD,OAAAY,EAAA,IAAAC,EAAA,CAAA,IAAAP,EAAA,GAAAQ,EAAA,UAAAN,EAAA,MAAAC,EAAA,GAAAE,EAAA,GAAAD,EAAA,SAAAH,CAAA,CAAA,CAYD,CAAA,EAEAH,EAAAA,YAAAA"}